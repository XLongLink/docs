{"version":3,"sources":["webpack:///../src/Wallet/Introduzione.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","type","variant","parentName","isMDXComponent"],"mappings":"iSASaA,EAAe,Q,mOAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,YAAC,IAAD,CAAMC,KAAK,UAAUC,QAAQ,QAAQF,QAAQ,QAA7C,6BAGA,kBACE,GAAM,UADR,UAGA,mZAMA,uBAAK,oBAAMG,WAAW,MAClB,UAAa,gBADZ,8GAML,ie,iOAUJN,EAAWO,gBAAiB","file":"component---src-wallet-introduzione-mdx-ac01ec4239f48e85b7e7.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"C:/Users/nano2/Documents/GitHub/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Hint } from '@nejcm/docz-theme-extended';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Hint type=\"warning\" variant=\"outer\" mdxType=\"Hint\">\n    Warning: proof of concept\n    </Hint>\n    <h1 {...{\n      \"id\": \"wallet\"\n    }}>{`Wallet`}</h1>\n    <p>{`Attualmente esistono 3 wallets principali nell'ecosistema Algorand: Pera, MyAlgo,\nAlgoSigner. Tuttavia numerosi sono i wallets che funzionano con algorand ed\nattualmente sono tagliati fuori da numerose applicazioni. Per citarne alcuni:\nAikon ORE, Exodus, AWallet\nSarà quindi necessario importare i plugin nella propria applicazione e settarli come\nmetodi di autenticazione:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { Pera, MyAlgo, AlgoSigner } from \"longlink/wallets\"\n\nll.useWallet([Pera, MyAlgo, AlgoSigner])\n`}</code></pre>\n    <p>{`Questo offrirà all’utente 3 possibilità di Loggare nell’applicazione.\nÈ possibile e probabile che altri wallets o fork ed aggiornamenti dei wallets esistenti\nvengano creati. LL permette di aggiungere altri wallets semplicemente aggiungendo alla\nlista il plugin per interagire con il wallet. Nel caso in cui un wallet venga aggiornato\ne l’API cambia, servirà solamente aggiornare il plugin di quel wallet e l’applicazione\ncontinuerà a funzionare.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}