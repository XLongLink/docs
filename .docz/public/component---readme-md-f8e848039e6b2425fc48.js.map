{"version":3,"sources":["webpack:///../README.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"sRAQaA,EAAe,Q,iNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,kBACE,GAAM,0BADR,0BAGA,kBACE,GAAM,kBADR,kBAGA,kBACE,GAAM,kBADR,kBAGA,2CACA,uBAAK,oBAAMC,WAAW,MAClB,UAAa,iBADZ,kBAIL,4CACA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,iBADZ,oBAIL,kHACgB,0BAAYA,WAAW,KAAvB,iBAChB,kBACE,GAAM,cADR,cAGA,kCAAiB,0BAAYA,WAAW,KAAvB,QAAjB,4HAEA,uBAAK,oBAAMA,WAAW,OAAjB,6GAUL,sBACE,kBAAIA,WAAW,MAAf,mEACA,kBAAIA,WAAW,MAAf,2DACA,kBAAIA,WAAW,MAAf,4CAEF,oL,+MAMJJ,EAAWK,gBAAiB","file":"component---readme-md-f8e848039e6b2425fc48.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"C:/Users/Administrator/Desktop/test/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"longlink-documentation\"\n    }}>{`LongLink documentation`}</h1>\n    <h3 {...{\n      \"id\": \"how-to-install\"\n    }}>{`How to install`}</h3>\n    <h2 {...{\n      \"id\": \"how-to-develop\"\n    }}>{`How to develop`}</h2>\n    <p>{`To run development`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm run dev\n`}</code></pre>\n    <p>{`To clean docz cache`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm run clean\n`}</code></pre>\n    <p>{`! Work only in powershell (visual studio terminal), to clean manually:\nDelete the folder `}<inlineCode parentName=\"p\">{`.docs/.cache`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"how-to-use\"\n    }}>{`How to use`}</h2>\n    <p>{`Under the `}<inlineCode parentName=\"p\">{`docs`}</inlineCode>{` folder indert each documentation in markdown syntax under the specific folder.\nInside the markdown place this template`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`---\nmenu: [Title]\nroute: [Route]\nname: [Subtitle]\n---\n\n### [Subtitle]\n\nBody in markdown syntax\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`[Title]`}{`: is the name of the folder where the file is created`}</li>\n      <li parentName=\"ul\">{`[Route]`}{`: nice route for the domanin to get that file`}</li>\n      <li parentName=\"ul\">{`[Subtitle]`}{`: Subtile for the men√π bar`}</li>\n    </ul>\n    <p>{`Once a new component is generate, run the clean command and restart the development.\nThis is not necessary in case of editing the markdown of a file`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}